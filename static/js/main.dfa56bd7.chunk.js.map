{"version":3,"sources":["images/burger.jpg","images/pie.jpg","images/oysters.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","Content","props","handleTabChange","bind","state","currentTab","e","this","setState","target","id","React","Component","Nav","handleClick","className","onClick","Text","content","homeText","menuText","contactText","MenuItem","src","food","caption","App","burger","pie","oysters","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sHAAAA,EAAOC,QAAU,IAA0B,oC,kBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,6PCMrCC,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,gBAAkB,EAAKA,gBAAgBC,KAArB,gBACvB,EAAKC,MAAQ,CACXC,WAAY,QAJG,E,6EAQHC,GACdC,KAAKC,SAAS,CAAEH,WAAYC,EAAEG,OAAOC,O,+BAIrC,OACE,yBAAKA,GAAG,WACN,+CACA,kBAAC,EAAD,CAAKL,WAAYE,KAAKH,MAAMC,WAAYH,gBAAiBK,KAAKL,kBAC9D,kBAAC,EAAD,CAAMG,WAAYE,KAAKH,MAAMC,kB,GAlBfM,IAAMC,WAwBtBC,E,YACJ,WAAYZ,GAAQ,IAAD,8BACjB,4CAAMA,KACDa,YAAc,EAAKA,YAAYX,KAAjB,gBAFF,E,yEAKPG,GACVC,KAAKN,MAAMC,gBAAgBI,K,+BAI3B,OACE,6BACE,0BAAMI,GAAG,OAAOK,UAAS,eAAoC,SAA1BR,KAAKN,MAAMI,WAAwB,WAAa,IAAMW,QAAST,KAAKO,aAAvG,QACA,0BAAMJ,GAAG,OAAOK,UAAS,eAAoC,SAA1BR,KAAKN,MAAMI,WAAwB,WAAa,IAAMW,QAAST,KAAKO,aAAvG,QACA,0BAAMJ,GAAG,UAAUK,UAAS,eAAoC,YAA1BR,KAAKN,MAAMI,WAA2B,WAAa,IAAMW,QAAST,KAAKO,aAA7G,gB,GAfUH,IAAMC,WAqBlBK,E,iLAEF,IAAIC,EACJ,OAAQX,KAAKN,MAAMI,YACjB,IAAK,OACHa,EAAUC,EACV,MACF,IAAK,OACHD,EAAUE,EACV,MACF,IAAK,UACHF,EAAUG,EACV,MACF,QACEH,EAAUC,EAEd,OACE,yBAAKJ,UAAU,YACZG,O,GAlBUP,IAAMC,WAwBzB,SAASU,EAASrB,GAChB,OACE,yBAAKc,UAAU,aACb,yBAAKA,UAAU,aAAaQ,IAAKtB,EAAMuB,OACvC,yBAAKT,UAAU,gBACZd,EAAMwB,UAYAC,MANf,WACE,OACE,kBAAC,EAAD,OAMEP,EACJ,6BACE,yFACA,6BACA,6dACA,6BACA,4XACA,6BACA,kZAMEC,EACJ,yBAAKL,UAAU,kBACb,kBAACO,EAAD,CACEE,KAAMG,IACNF,QAAQ,iHAEV,kBAACH,EAAD,CACEE,KAAMI,IACNH,QAAQ,6IAEV,kBAACH,EAAD,CACEE,KAAMK,IACNJ,QAAQ,yFAEV,kBAACH,EAAD,CACEE,KAAMG,IACNF,QAAQ,mHAKRJ,EACJ,wCACU,6BADV,qBAEoB,6BAFpB,SAGQ,6BAHR,UAIS,6BAJT,sBAKqB,6BAAM,6BAL3B,gBAMe,6BANf,aAOY,6BAAM,6BAPlB,SAQQ,6BARR,kCASiC,8BC/HfS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.dfa56bd7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger.866694b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pie.0f244325.jpg\";","module.exports = __webpack_public_path__ + \"static/media/oysters.921260db.jpg\";","import React from 'react';\nimport './App.css';\nimport burger from './images/burger.jpg';\nimport pie from './images/pie.jpg';\nimport oysters from './images/oysters.jpg';\n\nclass Content extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleTabChange = this.handleTabChange.bind(this);\n    this.state = {\n      currentTab: \"home\"\n    }\n  }\n\n  handleTabChange(e) {\n    this.setState({ currentTab: e.target.id });\n  };\n\n  render() {\n    return (\n      <div id=\"content\">\n        <h1>The Brexit Club</h1>\n        <Nav currentTab={this.state.currentTab} handleTabChange={this.handleTabChange} />\n        <Text currentTab={this.state.currentTab} />\n      </div>\n    )\n  }\n}\n\nclass Nav extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    this.props.handleTabChange(e);\n  }\n\n  render() {\n    return (\n      <nav>\n        <span id=\"home\" className={`link ${this.props.currentTab === \"home\" ? \"selected\" : \"\"}`} onClick={this.handleClick}>Home</span>\n        <span id=\"menu\" className={`link ${this.props.currentTab === \"menu\" ? \"selected\" : \"\"}`} onClick={this.handleClick}>Menu</span>\n        <span id=\"contact\" className={`link ${this.props.currentTab === \"contact\" ? \"selected\" : \"\"}`} onClick={this.handleClick}>Contact</span>\n      </nav>\n    )\n  }\n}\n\nclass Text extends React.Component {\n  render() {\n    let content\n    switch (this.props.currentTab) {\n      case \"home\":\n        content = homeText;\n        break;\n      case \"menu\":\n        content = menuText;\n        break;\n      case \"contact\":\n        content = contactText;\n        break;\n      default:\n        content = homeText;\n    }\n    return (\n      <div className=\"tab-body\">\n        {content}\n      </div>\n    )\n  }\n}\n\nfunction MenuItem(props) {\n  return (\n    <div className=\"menu-item\">\n      <img className=\"menu-image\" src={props.food} />\n      <div className=\"menu-caption\">\n        {props.caption}\n      </div>\n    </div>\n  )\n}\n\nfunction App() {\n  return (\n    <Content />\n  );\n}\n\nexport default App;\n\nconst homeText = (\n  <div>\n    <p>Welcome to the Brexit Club, home of the ruling prototypes.</p>\n    <br />\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed a est neque. Quisque mattis ultricies egestas. Sed condimentum venenatis finibus. Aliquam efficitur nibh at mauris porttitor, ullamcorper vulputate orci ullamcorper. Quisque sodales lacus non odio gravida, a venenatis tortor laoreet. Nunc eu velit venenatis, ornare mauris nec, faucibus ligula. Nam ac tempus orci, at mattis dolor. Praesent non molestie urna, elementum placerat dolor.</p>\n    <br />\n    <p>Etiam vel enim scelerisque, posuere purus sed, iaculis massa. Sed ac quam iaculis, rhoncus arcu ac, porta dolor. Quisque et dui orci. Integer pharetra neque non odio iaculis, in bibendum urna mattis. Sed mattis vel tellus ac lacinia. Aliquam pulvinar augue sit amet nisi blandit aliquam. Sed rhoncus lacinia lorem, placerat feugiat arcu ultricies a.</p>\n    <br />\n    <p>Proin feugiat lacinia ipsum in lacinia. Quisque lacinia libero sed eros dictum, eget faucibus ante bibendum. Integer nec orci dapibus, elementum turpis eu, porta nunc. Ut id est sed risus maximus vulputate quis vel magna. Cras pharetra mauris a vulputate porta. Aliquam scelerisque, orci at volutpat tempor, orci orci consectetur neque, vel finibus leo sapien ut ligula.</p>\n  </div>\n);\n\n\n\nconst menuText = (\n  <div className=\"menu-container\">\n    <MenuItem\n      food={burger}\n      caption=\"Bourgeois Burger, made of 100% ground Unicorn, with a side of battered diamond rings and potato wedge-issues\"\n    />\n    <MenuItem\n      food={pie}\n      caption=\"Steak and Ale Pie, get used to all the flavours you'll have to pretend to like when campaigning outside of London. Wonderful upper crust\"\n    />\n    <MenuItem\n      food={oysters}\n      caption=\"Offshore Oysters, with great treasures hidden behind an impenetrable shell (company)\"\n    />\n    <MenuItem\n      food={burger}\n      caption=\"I've run out of time to come up with any more witty banter so I'm just going to write some stock descriptions\"\n    />\n  </div>\n)\n\nconst contactText = (\n  <div>\n    Address:<br />\n    1 Old Boy's Avenue<br />\n    London<br />\n    N13 37H<br />\n    United(ish) Kingdom<br /><br />\n    Phone Number:<br />\n    1234567890<br /><br />\n    Email:<br />\n    Rather gauche, don't you think?<br />\n  </div>\n);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}